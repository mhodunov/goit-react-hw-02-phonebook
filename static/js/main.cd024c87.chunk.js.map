{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactForm/ContactForm.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js","ContactList/ContactList.module.css","Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInput","event","currentTarget","value","setState","handleSubmit","preventDefault","id","uuidv4","newContact","props","submitHandler","reset","className","styles","contactForm","onSubmit","this","contactLabel","contactSpan","type","contactInput","pattern","title","onChange","required","contactButton","Component","ContactList","filtered","onDeleteContact","contactList","length","map","contact","contactItem","contactName","contactNumber","onClick","notification","Filter","filterValue","filterUpdate","filterLabel","filterSpan","filterInput","autoComplete","defaultProps","App","contacts","filter","existingContact","find","alert","deleteContact","contactId","prevState","toLowerCase","includes","toLocaleLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd024c87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1FoWq\",\"contactInput\":\"ContactForm_contactInput__3_nV2\",\"contactLabel\":\"ContactForm_contactLabel__1cDIP\",\"contactSpan\":\"ContactForm_contactSpan__3aRVx\",\"contactButton\":\"ContactForm_contactButton__2qeqW\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  static propTypes = {\r\n    submitHandler: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInput = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const id = uuidv4();\r\n    const { name, number } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    const newContact = { id: id, name: name, number: number };\r\n\r\n    this.props.submitHandler(newContact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n      className={styles.contactForm}\r\n      onSubmit={this.handleSubmit}>\r\n        <label className={styles.contactLabel}>\r\n          <span className={styles.contactSpan}>Name</span>\r\n          <input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            className={styles.contactInput}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={this.state.name}\r\n            onChange={this.handleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.contactLabel}>\r\n          <span className={styles.contactSpan}>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={styles.contactInput}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            value={this.state.number}\r\n            onChange={this.handleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <button \r\n        className={styles.contactButton}\r\n        type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ filtered, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filtered.length ? (\r\n        filtered.map(contact => (\r\n          <li \r\n          className={styles.contactItem}\r\n          key={contact.id}>\r\n              <div>\r\n              <p className={styles.contactName}>{contact.name}</p>\r\n              <p className={styles.contactNumber}>{contact.number}</p>\r\n              </div>\r\n            <button\r\n              className={styles.contactButton}\r\n              onClick={() => {\r\n                onDeleteContact(contact.id);\r\n              }}\r\n            >\r\n              Delete contact\r\n            </button>\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li className={styles.notification}>Nothing found =(</li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filtered: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filterValue, filterUpdate }) => {\r\n  return (\r\n    <div>\r\n      <label className={styles.filterLabel}>\r\n        <span className={styles.filterSpan}>Find contacts by name</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={styles.filterInput}\r\n          value={filterValue}\r\n          onChange={filterUpdate}\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  filterValue: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n  filterUpdate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm.js';\nimport ContactList from './ContactList/ContactList.js';\nimport Filter from './Filter/Filter.js';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  submitHandler = newContact => {\n    const { contacts } = this.state;\n    const existingContact = contacts.find(\n      contact => contact.name === newContact.name,\n    );\n    if (existingContact) {\n      alert(`${existingContact.name} is already in contacts.`);\n      return;\n    }\n    this.setState({ contacts: [newContact, ...contacts] });\n  };\n\n  filterUpdate = event => {\n    const { value } = event.currentTarget;\n\n    this.setState({\n      filter: value,\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(\n          contact => contact.id !== contactId,\n        ),\n      };\n    });\n  };\n\n  render() {\n    const filtered = this.state.contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(this.state.filter.toLocaleLowerCase()) ||\n        number.includes(this.state.filter),\n    );\n\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"pageTitle\">Phonebook</h1>\n          <ContactForm submitHandler={this.submitHandler} />\n          <Filter\n            filterValue={this.state.filter}\n            filterUpdate={this.filterUpdate}\n          />\n          <h2 className=\"contactsTitle\">Contacts list</h2>\n          <ContactList\n            filtered={filtered}\n            onDeleteContact={this.deleteContact}\n          />\n      </div>\n    );\n\n    }\n  };   \n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ContactList_notification__DNjC1\",\"contactList\":\"ContactList_contactList__2Agc3\",\"contactName\":\"ContactList_contactName__38zIm\",\"contactNumber\":\"ContactList_contactNumber__12uoa\",\"contactButton\":\"ContactList_contactButton__27FKm\",\"contactItem\":\"ContactList_contactItem__3zNEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__8SFyL\",\"filterLabel\":\"Filter_filterLabel__1Oxx9\",\"filterSpan\":\"Filter_filterSpan__3dG1S\"};"],"sourceRoot":""}